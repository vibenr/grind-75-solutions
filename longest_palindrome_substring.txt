class Solution {

private: 
    bool check(string &s, int i, int j){
        while(i<j){
            if(s[i] != s[j])
                return false; 
            i++; 
            j--; 
        }

        return true; 
    }

public:
    string longestPalindrome(string s) {
        int n = s.size(); 
        int start_index = 0; // help to take substring
        int max_len = 0; // final palindrom string size
        for(int i = 0; i < n; i++){
            for(int j = i; j < n; j++){
                if(check(s, i, j)){
                    if(j-i+1 > max_len){
                        max_len = j-i+1; 
                        start_index = i; 
                    }
                }
            }
        }
        return s.substr(start_index, max_len);  // this is the main logic that should be come up to your mind
    }
};