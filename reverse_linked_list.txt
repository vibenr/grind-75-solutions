/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        
        if(head == NULL) return NULL; 
        
        ListNode *previous = NULL; 
        ListNode *current = head; 
        ListNode *nxt; 
        while(current != NULL){   
        nxt = current->next;     // this statement to iterate over the loop
        current->next = previous; // this is for change the links ..

        // now update the value of pointers..
        previous = current;
        current = nxt;
        }
        
        return previous; 
        
    }
};